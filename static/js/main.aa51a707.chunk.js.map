{"version":3,"sources":["trivia.png","actions/resetPoints.js","reducers/gameReducer.js","actions/GameActions.js","reducers/getQuestions.js","actions/TimerActions.js","reducers/timeReducer.js","reducers/categoryReducer.js","reducers/difficultyReducer.js","reducers/typeReducer.js","reducers/rootReducer.js","store/index.js","services/getQuestionsApi.js","components/Answers.js","actions/setPoints.js","components/Timer.js","components/Questions.js","actions/ChangeScoreboard.js","actions/answersAction.js","components/Header.js","pages/Game.js","actions/ReceiveQuestion.js","actions/ReceiveError.js","services/tokenRequest.js","components/PlayGameButton.js","components/Input.js","actions/SendName.js","actions/SendEmail.js","components/ConfigurationButton.js","pages/Start.js","services/getCategory.js","components/DropdownCategory.js","actions/RequestCategory.js","actions/ChangeCategory.js","components/DropdownDifficulty.js","actions/ChangeDifficulty.js","components/DropdownType.js","actions/ChangeType.js","pages/Configuration.js","pages/Feedback.js","actions/noFilter.js","pages/Ranking.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","gravatarEmail","score","assertions","wrongAnswerFlag","answersClasses","question","gameReducer","state","type","email","points","error","results","getQuestions","action","timer","stopTimer","timeReducer","timeId","category","categorySelected","id","categoryReducer","find","Number","change","difficulty","difficultySelected","difficultyReducer","types","typeSelected","typeReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","props","a","undefined","token","localStorage","getItem","URL","fetch","then","response","json","data","changeDataTest","correctAnswer","index","array","indexOf","Answers","answersArray","getAnswers","bind","submitAnswer","prevProps","this","toStopTimer","prevAnswersClasses","toFormatAnswers","correct","correct_answer","auxIncorrect","incorrect_answers","map","inc","decodeURIComponent","allAnswers","filteredAnswers","length","i","aux","Math","round","random","splice","setState","value","difficultyPoints","switchDifficulty","ele","theCorrectAnswer","Object","keys","key","data-testid","className","onClick","target","disabled","Component","connect","dispatch","formatAnswers","param","setPoints","defaultProps","Timer","setTimer","timerOn","prevStopTimer","clearInterval","startTimer","setInterval","saveScore","rankingFromLocalStorage","JSON","parse","obj","player","setItem","stringify","newRanking","newRankingItem","fetchLadder","imageUrl","MD5","sortedLadder","sort","b","Questions","questionNumber","nextQuestion","wrongAnswerSelected","resetTimerNow","to","objectToAnswers","currentQuestion","currentCategory","renderButton","Header","trimmedAndLowercasedMail","trim","toLocaleLowerCase","src","alt","Game","renderQuestions","sendQuestions","history","sendError","getQuestionsApi","code","response_code","clear","push","React","receiveQuestion","receiveError","result","tokenRequest","PlayGameButton","redirect","onPlayClick","nameToReducer","sendName","emailToReducer","sendEmail","htmlFor","onChange","ConfigurationButton","Start","removeItem","Input","DropdownCategory","saveCategory","getCategory","trivia_categories","saveChange","requestCategory","changeCategory","DropdownDifficulty","difficult","changeDifficulty","DropdownType","changeType","Configuration","Feedback","resetScore","resetFilter","answerTitle","redirectGame","Ranking","rankedLadder","rank","App","logo","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa51a707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","export const RESET_POINTS = 'RESET_POINTS';\n\nexport const resetPoints = () => ({ type: RESET_POINTS });\n","import { FORMAT_ANSWERS } from '../actions/GameActions';\nimport { RESET_POINTS } from '../actions/resetPoints';\n\nexport const INITIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  score: 0,\n  assertions: 0,\n  wrongAnswerFlag: false,\n  answersClasses: [],\n  question: {},\n};\nconst QUESTION = 'QUESTION';\nconst SENDEMAIL = 'SEND_EMAIL';\nconst SENDNAME = 'SEND_NAME';\nconst WRONG_ASNWER = 'WRONG_ANSWER';\nconst SET_POINTS = 'SET_POINTS';\nconst ERROR = 'ERROR';\n\nexport default function gameReducer(state = INITIAL_STATE, {\n  type, email, name, answersClasses, points, error, question,\n}) {\n  switch (type) {\n    case SENDEMAIL:\n      return { ...state, gravatarEmail: email };\n    case SENDNAME:\n      return { ...state, name };\n    case WRONG_ASNWER:\n      return { ...state, wrongAnswerFlag: true };\n    case FORMAT_ANSWERS:\n      return { ...state, answersClasses };\n    case SET_POINTS:\n      return {\n        ...state, score: state.score + points, assertions: state.assertions + 1,\n      };\n    case ERROR:\n      return { ...state, name: error, gravatarEmail: '' };\n    case RESET_POINTS:\n      return INITIAL_STATE;\n    case QUESTION:\n      return { ...state, question };\n    default:\n      return state;\n  }\n}\n","export const FORMAT_ANSWERS = 'FORMAT_ANSWERS';\n\nexport default function formatAnswers(answersClasses) {\n  return { type: FORMAT_ANSWERS, answersClasses };\n}\n","export const INITIAL_STATE = {\n  results: [],\n};\n\nconst GET_QUESTION = 'GET_QUESTION';\n\nexport default function getQuestions(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_QUESTION:\n      return { ...state, results: action.results };\n    default:\n      return state;\n  }\n}\n","export const RESET_TIMER = 'RESET_TIMER';\nexport const DECREASE_TIMER = 'DECREASE_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const STORE_TIME_ID = 'STORE_TIME_ID';\n\nexport const resetTimer = () => ({ type: RESET_TIMER });\nexport const decreaseTimer = () => ({ type: DECREASE_TIMER });\nexport const stopTimer = () => ({ type: STOP_TIMER });\nexport const storeTimeID = (timeId) => ({ type: STORE_TIME_ID, timeId });\n","import {\n  RESET_TIMER,\n  STOP_TIMER,\n  DECREASE_TIMER,\n  STORE_TIME_ID,\n} from '../actions/TimerActions';\n\nconst INITIAL_STATE = {\n  timer: 30,\n  stopTimer: false,\n};\n\nexport default function timeReducer(state = INITIAL_STATE, {\n  type, timeId,\n}) {\n  switch (type) {\n    case DECREASE_TIMER:\n      if (state.timer !== 0 && state.stopTimer === false) {\n        return {\n          ...state, timer: state.timer - 1,\n        };\n      } return { ...state };\n    case RESET_TIMER:\n      return { ...state, stopTimer: false, timer: 30 };\n    case STOP_TIMER:\n      return { ...state, stopTimer: true, timer: 30 };\n    case STORE_TIME_ID:\n      return { ...state, timeId };\n    default:\n      return state;\n  }\n}\n","const INITIAL_STATE = {\n  category: [],\n  categorySelected: { id: '' },\n};\nconst RESET_FILTER = 'RESET_FILTER';\nconst GET_CATEGORY = 'GET_CATEGORY';\nconst CHANGE_CATEGORY = 'CHANGE_CATEGORY';\n\nexport default function categoryReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_CATEGORY:\n      return { ...state, category: action.results };\n    case CHANGE_CATEGORY:\n      return {\n        ...state,\n        categorySelected: state.category.find(({ id }) => Number(id) === Number(action.change)),\n      };\n    case RESET_FILTER:\n      return INITIAL_STATE;\n    default: return state;\n  }\n}\n","const INITIAL_STATE = {\n  difficulty: ['easy', 'medium', 'hard'],\n  difficultySelected: '',\n};\n\nconst CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY';\nconst RESET_FILTER = 'RESET_FILTER';\n\nexport default function difficultyReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHANGE_DIFFICULTY:\n      return {\n        ...state,\n        difficultySelected: action.change,\n      };\n    case RESET_FILTER:\n      return INITIAL_STATE;\n    default: return state;\n  }\n}\n","const INITIAL_STATE = {\n  types: ['multiple', 'boolean'],\n  typeSelected: '',\n};\n\nconst RESET_FILTER = 'RESET_FILTER';\nconst CHANGE_TYPE = 'CHANGE_TYPE';\n\nexport default function typeReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHANGE_TYPE:\n      return {\n        ...state,\n        typeSelected: action.change,\n      };\n    case RESET_FILTER:\n      return INITIAL_STATE;\n    default: return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\nimport getQuestions from './getQuestions';\nimport timeReducer from './timeReducer';\nimport categoryReducer from './categoryReducer';\nimport difficultyReducer from './difficultyReducer';\nimport typeReducer from './typeReducer';\n\nconst rootReducer = () => combineReducers({\n  gameReducer,\n  getQuestions,\n  timeReducer,\n  categoryReducer,\n  difficultyReducer,\n  typeReducer,\n});\n\nexport default rootReducer;\n","import {\n  createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer(), composeEnhancers(applyMiddleware(thunk)));\n\n// const store = createStore(rootReducer(), compose(applyMiddleware(thunk)));\n\nexport default store;\n","export default async function getQuestionsApi(props) {\n  const {\n    categorySelected, difficultySelected, typeSelected,\n  } = props !== undefined ? props : '';\n  const { id } = categorySelected !== undefined ? categorySelected : '';\n  const token = localStorage.getItem('token');\n  const URL = `https://opentdb.com/api.php?amount=5&encode=url3986&token=${token}&category=${id}&difficulty=${difficultySelected}&type=${typeSelected}`;\n  const results = await fetch(URL)\n    .then((response) => response.json())\n    .then((data) => data);\n  return results;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport formatAnswers from '../actions/GameActions';\nimport { stopTimer } from '../actions/TimerActions';\nimport setPoints from '../actions/setPoints';\nimport './Answers.css';\n\nfunction switchDifficulty(difficulty) {\n  switch (difficulty) {\n    case 'hard':\n      return 3;\n    case 'medium':\n      return 2;\n    default:\n      return 1;\n  }\n}\n\nfunction changeDataTest(correctAnswer, index, array) {\n  const correctIndex = array.indexOf(correctAnswer);\n  if (correctIndex === index) {\n    return 'correct-answer';\n  }\n  return `wrong-answer-${index}`;\n}\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { results: {}, answersArray: ['', '', '', ''] };\n    this.getAnswers = this.getAnswers.bind(this);\n    this.submitAnswer = this.submitAnswer.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      question,\n      timer,\n      wrongAnswerFlag,\n      answersClasses,\n      toStopTimer,\n    } = this.props;\n\n    const {\n      answersClasses: prevAnswersClasses,\n    } = prevProps;\n\n    if (prevProps.question !== question) {\n      this.getAnswers(question);\n    }\n\n    if (wrongAnswerFlag === true && timer === 0 && answersClasses === prevAnswersClasses) {\n      this.submitAnswer();\n      toStopTimer();\n    }\n  }\n\n  getAnswers(question) {\n    const { toFormatAnswers } = this.props;\n    const { correct_answer: correct, incorrect_answers: incorrect } = question;\n    const auxIncorrect = incorrect.map((inc) => decodeURIComponent(inc));\n    const allAnswers = [decodeURIComponent(correct), ...auxIncorrect];\n    const filteredAnswers = (allAnswers.length > 2) ? ['', '', '', ''] : ['', ''];\n    for (let i = 0; i < filteredAnswers.length; i += 1) {\n      const aux = (allAnswers.length > 1) ? Math.round((Math.random() * allAnswers.length)) : 0;\n      filteredAnswers.splice(i, 1, allAnswers.splice(aux - 1, 1)[0]);\n    }\n    this.setState({ results: filteredAnswers, answersArray: ['', '', '', ''] });\n    toFormatAnswers(['', '', '', '']);\n  }\n\n  submitAnswer(value) {\n    const {\n      question: { correct_answer: correctAnswer, difficulty },\n      toFormatAnswers, timer, points,\n    } = this.props;\n    const difficultyPoints = switchDifficulty(decodeURIComponent(difficulty));\n    if (value === decodeURIComponent(correctAnswer)) {\n      points(10 + (difficultyPoints * timer));\n    }\n    const { results, answersArray } = this.state;\n    const index = results.indexOf(decodeURIComponent(correctAnswer));\n    const formattedAnswers = {\n      ...this.state,\n      answersArray: answersArray.map((ele, i) => ((i === index) ? 'green' : 'red')),\n    };\n    toFormatAnswers(formattedAnswers.answersArray);\n  }\n\n  render() {\n    const { results } = this.state;\n    const {\n      question, answersClasses, question: { correct_answer: theCorrectAnswer },\n      toStopTimer,\n    } = this.props;\n    const correctAnswer = question ? decodeURIComponent(theCorrectAnswer) : '';\n    return (\n      <div>\n        {(Object.keys(results).length > 0)\n          ? results.map((response, index, array) => (\n            <button\n              type=\"button\"\n              value={response}\n              key={response}\n              data-testid={changeDataTest(correctAnswer, index, array)}\n              className={answersClasses && answersClasses[index]}\n              onClick={\n                ({ target }) => {\n                  this.submitAnswer(target.value);\n                  toStopTimer();\n                }\n              }\n              disabled={(answersClasses[0]) ? true : !true}\n            >\n              {decodeURIComponent(response)}\n            </button>\n          )) : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  gameReducer: { answersClasses, wrongAnswerFlag, question },\n  timeReducer: { timer },\n}) => ({\n  timer,\n  answersClasses,\n  wrongAnswerFlag,\n  question,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toFormatAnswers: (answersClasses) => dispatch(formatAnswers(answersClasses)),\n  toStopTimer: () => dispatch(stopTimer()),\n  points: (param) => dispatch(setPoints(param)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Answers);\n\nAnswers.propTypes = {\n  question: PropTypes.instanceOf(Object),\n  toFormatAnswers: PropTypes.func.isRequired,\n  answersClasses: PropTypes.arrayOf(PropTypes.string),\n  toStopTimer: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n  wrongAnswerFlag: PropTypes.bool,\n  points: PropTypes.func.isRequired,\n};\n\nAnswers.defaultProps = {\n  question: {},\n  answersClasses: {},\n  wrongAnswerFlag: false,\n};\n","export default function setPoints(points) {\n  const SET_POINTS = 'SET_POINTS';\n  const actionToken = { type: SET_POINTS, points };\n  return actionToken;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { decreaseTimer } from '../actions/TimerActions';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTimer: '',\n    };\n    this.timerOn = this.timerOn.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerOn();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { stopTimer } = this.props;\n    const { stopTimer: prevStopTimer } = prevProps;\n    const { setTimer } = this.state;\n    if (stopTimer === true) {\n      clearInterval(setTimer);\n    }\n\n    if (prevStopTimer === true) {\n      clearInterval(setTimer);\n      this.timerOn();\n    }\n  }\n\n  timerOn() {\n    const { startTimer } = this.props;\n    this.setState({ setTimer: setInterval(() => startTimer(), 1000) });\n  }\n\n  render() {\n    const { timer } = this.props;\n    return (\n      <div data-testid=\"timer\">\n        {`Tempo: ${timer}`}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  startTimer: () => dispatch(decreaseTimer()),\n});\n\nconst mapStateToProps = ({\n  timeReducer: { timer, stopTimer },\n}) => ({\n  timer, stopTimer,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n\nTimer.propTypes = {\n  stopTimer: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n  startTimer: PropTypes.func.isRequired,\n};\n\nTimer.defaultProps = {\n  stopTimer: false,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport MD5 from 'crypto-js/md5';\nimport { wrongAnswer } from '../actions/ChangeScoreboard';\nimport { resetTimer } from '../actions/TimerActions';\nimport Answers from './Answers';\nimport Timer from './Timer';\nimport answers from '../actions/answersAction';\n\n\nfunction fetchLadder(rankingFromLocalStorage, newRankingItem) {\n  if (rankingFromLocalStorage === null) {\n    return [\n      newRankingItem,\n    ];\n  }\n  return [\n    ...rankingFromLocalStorage,\n    newRankingItem,\n  ];\n}\n\nfunction saveScore(name, assertions, score, gravatarEmail) {\n  const rankingFromLocalStorage = localStorage.getItem('ranking') !== null ? JSON.parse(localStorage.getItem('ranking')) : null;\n  const obj = {\n    player: {\n      name, assertions, score, gravatarEmail,\n    },\n  };\n  localStorage.setItem('state', JSON.stringify(obj));\n  const imageUrl = `https://www.gravatar.com/avatar/${MD5(gravatarEmail)}`;\n  const newRankingItem = { name, score, imageUrl };\n  const newRanking = fetchLadder(rankingFromLocalStorage, newRankingItem);\n  const sortedLadder = [...newRanking].sort((a, b) => b.score - a.score);\n  localStorage.setItem('ranking', JSON.stringify(sortedLadder));\n}\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionNumber: 0,\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { timer, wrongAnswerSelected } = this.props;\n    return timer === 0 && wrongAnswerSelected();\n  }\n\n  nextQuestion() {\n    const { resetTimerNow } = this.props;\n    this.setState((state) => ({ questionNumber: state.questionNumber + 1 }));\n    resetTimerNow();\n  }\n\n  renderButton(name, assertions, score, gravatarEmail) {\n    const { questionNumber } = this.state;\n    if (questionNumber < 4) {\n      return (\n        <button\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={this.nextQuestion}\n        >\n          PRÓXIMA\n        </button>\n      );\n    }\n    return (\n      <Link to=\"/feedback\">\n        <button\n          data-testid=\"btn-next\"\n          onClick={() => saveScore(name, assertions, score, gravatarEmail)}\n          type=\"button\"\n        >\n          FINALIZAR\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    const {\n      results, timer, name, assertions, score, gravatarEmail, stopTimer, objectToAnswers,\n    } = this.props;\n    const { questionNumber } = this.state;\n    const currentQuestion = results.map(({ question }) => decodeURIComponent(question));\n    const currentCategory = results.map(({ category }) => decodeURIComponent(category));\n    objectToAnswers(results[questionNumber]);\n    return (\n      <div>\n        {timer === 0 && <div>RESPOSTA ERRADA</div>}\n        <div>\n          <p data-testid=\"question-category\">{currentCategory[questionNumber]}</p>\n          <h3 data-testid=\"question-text\">{currentQuestion[questionNumber]}</h3>\n        </div>\n        <div>\n          <Timer />\n        </div>\n        <div>\n          <Answers />\n        </div>\n        <div>\n          {\n            stopTimer\n              ? this.renderButton(name, assertions, score, gravatarEmail)\n              : false\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  wrongAnswerSelected: () => dispatch(wrongAnswer()),\n  resetTimerNow: () => dispatch(resetTimer()),\n  objectToAnswers: (ele) => dispatch(answers(ele)),\n});\n\nconst mapStateToProps = ({\n  getQuestions: { results },\n  timeReducer: { timer, stopTimer },\n  gameReducer: {\n    name, assertions, score, gravatarEmail,\n  },\n}) => ({\n  results, timer, name, assertions, score, gravatarEmail, stopTimer,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n\nQuestions.propTypes = {\n  name: PropTypes.string,\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n  gravatarEmail: PropTypes.string,\n  resetTimerNow: PropTypes.func.isRequired,\n  results: PropTypes.instanceOf(Array).isRequired,\n  timer: PropTypes.number.isRequired,\n  wrongAnswerSelected: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool,\n  objectToAnswers: PropTypes.func.isRequired,\n};\n\nQuestions.defaultProps = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  stopTimer: false,\n};\n","const WRONG_ANSWER = 'WRONG_ANSWER';\n\nexport const wrongAnswer = () => ({ type: WRONG_ANSWER });\n\nexport default wrongAnswer;\n","export default function changeC(question) {\n  const QUESTION = 'QUESTION';\n  const actionChange = { type: QUESTION, question };\n  return actionChange;\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MD5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\n\nconst Header = ({ score, name, gravatarEmail }) => {\n  const trimmedAndLowercasedMail = gravatarEmail.trim().toLocaleLowerCase();\n  return (\n    <div>\n      <img\n        src={`https://www.gravatar.com/avatar/${MD5(trimmedAndLowercasedMail)}`}\n        alt=\"Gravatar profile\"\n        data-testid=\"header-profile-picture\"\n      />\n      <h1 data-testid=\"header-player-name\">{`Jogador: ${name}`}</h1>\n      <h2>\n        Pontos:\n        <span data-testid=\"header-score\">{score}</span>\n      </h2>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameReducer: { score, name, gravatarEmail } }) => (\n  { score, name, gravatarEmail }\n);\n\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  score: PropTypes.number,\n  name: PropTypes.string,\n  gravatarEmail: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  score: 0,\n  name: '',\n  gravatarEmail: '',\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getQuestionsApi from '../services/getQuestionsApi';\nimport receiveQuestion from '../actions/ReceiveQuestion';\nimport receiveError from '../actions/ReceiveError';\nimport Questions from '../components/Questions';\nimport Header from '../components/Header';\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { renderQuestions: false };\n  }\n\n  componentDidMount() {\n    const { sendQuestions, history, sendError } = this.props;\n    getQuestionsApi(this.props)\n      .then(async ({ response_code: code, results }) => {\n        if (code === 3) {\n          sendError('Token Expirado');\n          localStorage.clear();\n          await history.push('/');\n        }\n        this.setState({ renderQuestions: true });\n        return sendQuestions(results);\n      });\n  }\n\n  render() {\n    const { renderQuestions } = this.state;\n    return (renderQuestions) ? (\n      <div>\n        <Header />\n        <Questions />\n      </div>\n    ) : null;\n  }\n}\n\nconst mapStateToProps = ({\n  categoryReducer: { categorySelected },\n  difficultyReducer: { difficultySelected },\n  typeReducer: { typeSelected },\n}) => ({\n  categorySelected, difficultySelected, typeSelected,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  sendQuestions: (results) => dispatch(receiveQuestion(results)),\n  sendError: (error) => dispatch(receiveError(error)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nGame.propTypes = {\n  history: PropTypes.instanceOf(Object),\n  sendQuestions: PropTypes.func.isRequired,\n  sendError: PropTypes.func.isRequired,\n};\n\nGame.defaultProps = {\n  history: {},\n};\n","export default function receiveQuestion(results) {\n  const GET_QUESTION = 'GET_QUESTION';\n  const actionToken = { type: GET_QUESTION, results };\n  return actionToken;\n}\n","export default function receiveQuestion(error) {\n  const ERROR = 'ERROR';\n  const actionError = { type: ERROR, error };\n  return actionError;\n}\n","async function tokenRequest() {\n  const URL = 'https://opentdb.com/api_token.php?command=request';\n  const token = (localStorage.getItem('token')) ? localStorage.getItem('token') : await fetch(URL)\n    .then((response) => response.json())\n    .then((result) => result);\n  return token;\n}\n\nexport default tokenRequest;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport tokenRequest from '../services/tokenRequest';\n\nclass PlayGameButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirect: false };\n    this.onPlayClick = this.onPlayClick.bind(this);\n  }\n\n  onPlayClick(name, gravatarEmail) {\n    localStorage.setItem('state', JSON.stringify({ player: { name, gravatarEmail } }));\n    tokenRequest()\n      .then(async (param) => {\n        const aux = (typeof param === 'object') ? param.token : param;\n        localStorage.setItem('token', (aux));\n        await this.setState({ redirect: true });\n      });\n  }\n\n  render() {\n    const { name, gravatarEmail } = this.props;\n    const { redirect } = this.state;\n    return (redirect) ? <Redirect to=\"/game\" /> : (\n      <button\n        type=\"button\"\n        onClick={() => this.onPlayClick(name, gravatarEmail)}\n        data-testid=\"btn-play\"\n        disabled={(name !== '' && gravatarEmail !== '') ? false : !false}\n      >\n        Jogar!\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = ({ gameReducer: { name, gravatarEmail } }) => ({ name, gravatarEmail });\n\nexport default connect(mapStateToProps)(PlayGameButton);\n\nPlayGameButton.propTypes = {\n  name: PropTypes.string,\n  gravatarEmail: PropTypes.string,\n};\n\nPlayGameButton.defaultProps = {\n  name: '',\n  gravatarEmail: '',\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport sendName from '../actions/SendName';\nimport sendEmail from '../actions/SendEmail';\n\nconst InputInitial = ({\n  nameToReducer, emailToReducer, name, gravatarEmail,\n}) => (\n  <div>\n    <label htmlFor=\"input-email\" data-testid=\"label-gravatar-email\">Email do gravatar:</label>\n    <input\n      type=\"email\"\n      id=\"input-email\"\n      data-testid=\"input-gravatar-email\"\n      value={gravatarEmail}\n      onChange={({ target }) => emailToReducer(target.value)}\n    />\n    <label htmlFor=\"input-name\" data-testid=\"label-player-name\">Nome do Jogador:</label>\n    <input\n      type=\"text\"\n      id=\"input-Name\"\n      data-testid=\"input-player-name\"\n      value={name}\n      onChange={({ target }) => nameToReducer(target.value)}\n    />\n  </div>\n);\n\nconst mapStateToProps = ({ gameReducer: { name, gravatarEmail } }) => ({ name, gravatarEmail });\n\nconst mapDispatchToProps = (dispatch) => ({\n  nameToReducer: (name) => dispatch(sendName(name)),\n  emailToReducer: (email) => dispatch(sendEmail(email)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputInitial);\n\nInputInitial.propTypes = {\n  nameToReducer: PropTypes.func,\n  emailToReducer: PropTypes.func,\n}.isRequired;\n","export default function SendEmail(name) {\n  const SENDNAME = 'SEND_NAME';\n  const actionToken = { type: SENDNAME, name };\n  return actionToken;\n}\n","export default function sendMail(email) {\n  const SENDEMAIL = 'SEND_EMAIL';\n  const actionToken = { type: SENDEMAIL, email };\n  return actionToken;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ConfigurationButton.css';\n\nclass ConfigurationButton extends Component {\n  render() {\n    return (\n      <Link to=\"/configuration\" data-testid=\"config-button\" className=\"config-button\">\n        ● CONFIGURAÇÔES\n      </Link>\n    );\n  }\n}\n\nexport default ConfigurationButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PlayGameButton from '../components/PlayGameButton';\nimport InputInitial from '../components/Input';\nimport ConfigurationButton from '../components/ConfigurationButton';\n\nclass Start extends Component {\n  componentDidMount() {\n    localStorage.removeItem('state');\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <ConfigurationButton />\n        </div>\n        <div>\n          <InputInitial />\n        </div>\n        <div>\n          <PlayGameButton />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Start);\n","export default async function getCategory() {\n  const URL = 'https://opentdb.com/api_category.php';\n  const results = await fetch(URL)\n    .then((response) => response.json())\n    .then((data) => data);\n  return results;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getCategory from '../services/getCategory';\nimport requestCategory from '../actions/RequestCategory';\nimport changeCategory from '../actions/ChangeCategory';\n\nclass DropdownCategory extends React.Component {\n  componentDidMount() {\n    const { saveCategory } = this.props;\n    getCategory()\n      .then(({ trivia_categories: category }) => saveCategory(category));\n  }\n\n  render() {\n    const { category, saveChange, categorySelected } = this.props;\n    return (\n      <div>\n        <h4>Categoria:</h4>\n        <select\n          data-testid=\"question-category-dropdown\"\n          value={categorySelected.id}\n          onChange={({ target }) => saveChange(target.value)}\n        >\n          <option value=\"\">Random</option>\n          {category.map(({ name, id }) => (<option value={id} key={name}>{name}</option>))}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ categoryReducer: { category, categorySelected } }) => (\n  { category, categorySelected });\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveCategory: (results) => dispatch(requestCategory(results)),\n  saveChange: (change) => dispatch(changeCategory(change)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownCategory);\n\nDropdownCategory.propTypes = {\n  saveCategory: PropTypes.func.isRequired,\n  category: PropTypes.instanceOf(Array),\n  saveChange: PropTypes.func.isRequired,\n  categorySelected: PropTypes.instanceOf(Object),\n};\n\nDropdownCategory.defaultProps = {\n  category: [],\n  categorySelected: {},\n};\n","export default function receiveQuestion(results) {\n  const GET_CATEGORY = 'GET_CATEGORY';\n  const actionQuestion = { type: GET_CATEGORY, results };\n  return actionQuestion;\n}\n","export default function changeC(change) {\n  const CHANGE_CATEGORY = 'CHANGE_CATEGORY';\n  const actionChange = { type: CHANGE_CATEGORY, change };\n  return actionChange;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeDifficulty from '../actions/ChangeDifficulty';\n\nconst DropdownDifficulty = ({ difficulty, difficultySelected, saveChange }) => (\n  <div>\n    <h4>Dificuldade:</h4>\n    <select\n      data-testid=\"question-difficulty-dropdown\"\n      value={difficultySelected}\n      onChange={({ target }) => saveChange(target.value)}\n    >\n      <option value=\"\">Random</option>\n      {difficulty.map((difficult) => (\n        <option\n          value={difficult}\n          key={difficult}\n        >\n          {difficult}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nconst mapStateToProps = ({ difficultyReducer: { difficulty, difficultySelected } }) => (\n  { difficulty, difficultySelected }\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveChange: (change) => dispatch(changeDifficulty(change)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownDifficulty);\n\nDropdownDifficulty.propTypes = {\n  saveChange: PropTypes.func.isRequired,\n  difficultySelected: PropTypes.string,\n  difficulty: PropTypes.instanceOf(Array).isRequired,\n};\n\nDropdownDifficulty.defaultProps = {\n  difficultySelected: '',\n};\n","export default function changeC(change) {\n  const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY';\n  const actionChange = { type: CHANGE_DIFFICULTY, change };\n  return actionChange;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeType from '../actions/ChangeType';\n\nconst DropdownType = ({ types, typeSelected, saveChange }) => (\n  <div>\n    <h4>Tipo:</h4>\n    <select\n      data-testid=\"question-type-dropdown\"\n      value={typeSelected}\n      onChange={({ target }) => saveChange(target.value)}\n    >\n      <option value=\"\">Random</option>\n      {types.map((type) => (<option value={type} key={type}>{type}</option>))}\n    </select>\n  </div>\n);\n\nconst mapStateToProps = ({ typeReducer: { types, typeSelected } }) => (\n  { types, typeSelected }\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveChange: (change) => dispatch(changeType(change)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownType);\n\nDropdownType.propTypes = {\n  saveChange: PropTypes.func.isRequired,\n  typeSelected: PropTypes.string,\n  types: PropTypes.instanceOf(Array).isRequired,\n};\n\nDropdownType.defaultProps = {\n  typeSelected: '',\n};\n","export default function changeC(change) {\n  const CHANGE_TYPE = 'CHANGE_TYPE';\n  const actionChange = { type: CHANGE_TYPE, change };\n  return actionChange;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DropdownCategory from '../components/DropdownCategory';\nimport DropdownDifficulty from '../components/DropdownDifficulty';\nimport DropdownType from '../components/DropdownType';\n\nconst Configuration = ({ history }) => (\n  <div>\n    <button type=\"button\" onClick={() => history.push('/')}>Voltar</button>\n    <DropdownCategory />\n    <DropdownDifficulty />\n    <DropdownType />\n  </div>\n);\n\nexport default Configuration;\n\nConfiguration.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { resetTimer } from '../actions/TimerActions';\nimport { resetPoints } from '../actions/resetPoints';\nimport { resetAllFilters } from '../actions/noFilter';\n\nclass Feedback extends Component {\n  static redirectGame(resetTimerNow, resetScore, resetFilter) {\n    resetTimerNow();\n    resetScore();\n    resetFilter();\n  }\n\n  render() {\n    const { resetTimerNow, resetScore, resetFilter } = this.props;\n    const state = (localStorage.getItem('state') !== null) ? JSON.parse(localStorage.getItem('state')) : { player: { assertions: '', score: '' } };\n    const { assertions, score } = state.player;\n    const answerTitle = assertions >= 3 ? 'Mandou bem!' : 'Podia ser melhor...';\n    return (\n      <div>\n        <header>\n          <Header />\n        </header>\n        <section>\n          <h2 data-testid=\"feedback-text\">{answerTitle}</h2>\n          <h3 data-testid=\"feedback-total-question\">{`Você acertou ${assertions || 0} questões!`}</h3>\n          <h3 data-testid=\"feedback-total-score\">{`Um total de ${score || 0} pontos`}</h3>\n        </section>\n        <section>\n          <div>\n            <Link to=\"/ranking\">VER RANKING</Link>\n          </div>\n          <div>\n            <Link\n              to=\"/\"\n              onClick={() => { Feedback.redirectGame(resetTimerNow, resetScore, resetFilter); }}\n            >\n              JOGAR NOVAMENTE\n            </Link>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  resetTimerNow: PropTypes.func.isRequired,\n  resetScore: PropTypes.func.isRequired,\n  resetFilter: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetTimerNow: () => dispatch(resetTimer()),\n  resetScore: () => dispatch(resetPoints()),\n  resetFilter: () => dispatch(resetAllFilters()),\n});\n\n\nexport default connect(null, mapDispatchToProps)(Feedback);\n","export const RESET_FILTER = 'RESET_FILTER';\n\nexport const resetAllFilters = () => ({ type: RESET_FILTER });\n","import React, { Component } from 'react';\n\nclass Ranking extends Component {\n  render() {\n    const rankedLadder = localStorage.getItem('ranking') !== null ? JSON.parse(localStorage.getItem('ranking')) : [];\n    if (rankedLadder.length === 0) return <li>Nenhum registro</li>;\n    return (\n      <div>\n        <h1>Ranking</h1>\n        <ol>\n          {rankedLadder.map(\n            (rank, index) => (\n              <li key={`${rank.name}_${rank.score}_${index + 1}`}>\n                <div>\n                  <img data-testid={`profile-picture-${index + 1}`} src={rank.imageUrl} alt={`${rank.name} grAvatar`} />\n                </div>\n                <div>\n                  <div>\n                    <span data-testid={`${rank.name}-${index + 1}`}>\n                      {`${rank.name}`}\n                    </span>\n                    <span> pontuou </span>\n                    <span data-testid={`score-${index}`} className=\"rank-score\">\n                      {`${rank.score}`}\n                    </span>\n                  </div>\n                </div>\n              </li>\n            ),\n          )}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport logo from './trivia.png';\nimport Game from './pages/Game';\nimport Start from './pages/Start';\nimport Configuration from './pages/Configuration';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          SUA VEZ\n        </p>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Start} />\n            <Route path=\"/configuration\" component={Configuration} />\n            <Route path=\"/game\" component={Game} />\n            <Route path=\"/feedback\" component={Feedback} />\n            <Route path=\"/ranking\" component={Ranking} />\n          </Switch>\n        </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}